name: Build and deploy Cumulocity Microservice

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    environment: ${{ github.event_name == 'pull_request' && 'test' || github.ref == 'refs/heads/main' && 'preproduction' || github.event_name == 'release' && 'production' }}
    if: github.event.pull_request.draft == false && !startsWith(github.event.pull_request.title, 'chore(main)')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Create zip file with Docker image and cumulocity.json
        run: |
          TAG=$(echo $DOCKER_METADATA_OUTPUT_TAGS | awk '{print $1}')
          docker pull $TAG
          docker save -o image.tar $TAG
          jq '.version += "-SNAPSHOT"' cumulocity.json > cumulocity_tmp.json && mv cumulocity_tmp.json cumulocity.json
          zip ${{ env.REPO_NAME }}.zip image.tar cumulocity.json

      - name: Set up Cumulocity CLI
        uses: reubenmiller/setup-go-c8y-cli@main

      - name: Run deployment
        if: ${{ vars.C8Y_HOST }} != ''
        run: |
          export 'C8Y_HOST=${{ vars.C8Y_HOST }}'
          export 'C8Y_USER=${{ vars.C8Y_USER }}'
          export 'C8Y_PASSWORD=${{ secrets.C8Y_PASSWORD }}'
          c8y microservices create --file ${{ env.REPO_NAME }}.zip
